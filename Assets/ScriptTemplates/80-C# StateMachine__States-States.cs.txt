using System.Collections.Generic;
public class #SCRIPTNAME# : States
{
    enum State
    {
        Idle,
        Jump,
    }
    #SCRIPTNAME#Core _core;
    Dictionary<State, BaseState<#SCRIPTNAME#Core, #SCRIPTNAME#>> _states = 
        new Dictionary<State, BaseState<#SCRIPTNAME#Core, #SCRIPTNAME#>>();
    public #SCRIPTNAME#(#SCRIPTNAME#Core contextCore)
    {
        _core = contextCore;

        _states[State.Idle] = new PlayerIdleState(_core, this);
        _states[State.Jump] = new PlayerJumpState(_core, this);
    }

    public BaseState<#SCRIPTNAME#Core, #SCRIPTNAME#> Idle() => _states[State.Idle];
    public BaseState<#SCRIPTNAME#Core, #SCRIPTNAME#> Jump() => _states[State.Jump];
    
}
